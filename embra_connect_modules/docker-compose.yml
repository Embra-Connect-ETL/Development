version: "3.3"

services:
  ec_firewall:
    image: embraconnect/ec_firewall:latest
    restart: unless-stopped
    ports:
      - "8082:8082"
    networks:
      - ec_network
    environment:
      INFISICAL_UNIVERSAL_CLIENT_ID: ${INFISICAL_UNIVERSAL_CLIENT_ID}
      INFISICAL_UNIVERSAL_CLIENT_SECRET: ${INFISICAL_UNIVERSAL_CLIENT_SECRET}
      INFISICAL_PROJECT_ID: ${INFISICAL_PROJECT_ID}
      INFISICAL_SITE_URL: http://infisical-backend:8080

  ec_gateway:
    image: embraconnect/ec_gateway:latest
    restart: unless-stopped
    depends_on:
      - infisical-backend
    ports:
      - "8081:8081"
    networks:
      - ec_network
    environment:
      INFISICAL_UNIVERSAL_CLIENT_ID: ${INFISICAL_UNIVERSAL_CLIENT_ID}
      INFISICAL_UNIVERSAL_CLIENT_SECRET: ${INFISICAL_UNIVERSAL_CLIENT_SECRET}
      INFISICAL_PROJECT_ID: ${INFISICAL_PROJECT_ID}
      INFISICAL_SITE_URL: http://infisical-backend:8080

  ec_access_control:
    image: embraconnect/ec_access_control:latest
    restart: unless-stopped
    depends_on:
      - ec_gateway
      - infisical-backend
    ports:
      - "8800:8800"
    networks:
      - ec_network
    environment:
      INFISICAL_UNIVERSAL_CLIENT_ID: ${INFISICAL_UNIVERSAL_CLIENT_ID}
      INFISICAL_UNIVERSAL_CLIENT_SECRET: ${INFISICAL_UNIVERSAL_CLIENT_SECRET}
      INFISICAL_PROJECT_ID: ${INFISICAL_PROJECT_ID}
      INFISICAL_SITE_URL: http://infisical-backend:8080

  ec_connect_ide:
    image: embraconnect/ec_connect_ide:latest
    restart: unless-stopped
    depends_on:
      - ec_access_control
      - infisical-backend
    ports:
      - "7000:7000"
    networks:
      - ec_network
    environment:
      INFISICAL_UNIVERSAL_CLIENT_ID: ${INFISICAL_UNIVERSAL_CLIENT_ID}
      INFISICAL_UNIVERSAL_CLIENT_SECRET: ${INFISICAL_UNIVERSAL_CLIENT_SECRET}
      INFISICAL_PROJECT_ID: ${INFISICAL_PROJECT_ID}
      INFISICAL_SITE_URL: http://infisical-backend:8080

  ec_client:
    image: embraconnect/ec_client:latest
    restart: unless-stopped
    depends_on:
      - ec_connect_ide
      - infisical-backend
    ports:
      - "8000:8000"
    networks:
      - ec_network
    environment:
      INFISICAL_UNIVERSAL_CLIENT_ID: ${INFISICAL_UNIVERSAL_CLIENT_ID}
      INFISICAL_UNIVERSAL_CLIENT_SECRET: ${INFISICAL_UNIVERSAL_CLIENT_SECRET}
      INFISICAL_PROJECT_ID: ${INFISICAL_PROJECT_ID}
      INFISICAL_SITE_URL: http://infisical-backend:8080

  mongo-db:
    image: mongo:latest
    restart: unless-stopped
    depends_on:
      - infisical-backend
    ports:
      - "27017:27017"
    networks:
      - ec_network
    environment:
      MONGO_INITDB_ROOT_USERNAME: ec_root
      MONGO_INITDB_ROOT_PASSWORD: ec_root
      MONGO_INITDB_DATABASE: embra_connect_dev
    volumes:
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro

  garage:
    image: dxflrs/garage:v0.9.3
    # network_mode: "host"
    restart: unless-stopped
    environment:
      - GARAGE_ADMIN_TOKEN=ec_admin
    ports:
      - "3900:3900"
      - "3901:3901"
      - "3902:3902"
      - "3903:3903"
    volumes:
      - ./garage.toml:/etc/garage.toml
      - ./meta:/var/lib/garage/meta
      - ./data:/var/lib/garage/data

  infisical-backend:
    container_name: infisical-backend
    restart: unless-stopped
    depends_on:
      - infisical-dev-redis
      - infisical-db

    image: infisical/infisical:latest-postgres
    # env_file: .env
    ports:
      - "8080:8080"
    environment:
      - NODE_ENV=production
      - AUTH_SECRET=71c79ec2a4c6059df9838e8d98ed608a105a7a810e3bbced201f25a2ea9108d0
      - ENCRYPTION_KEY= ed0da43defc228d24873ba6cccfbec4d
      - REDIS_URL=redis://infisical-dev-redis:6379
      - DB_CONNECTION_URI=postgresql://infisical:infisical_user@infisical-db:5432/infisical
      - CORS_ALLOWED_ORIGINS=["*"]
    networks:
      - ec_network

  infisical-dev-redis:
    image: redis
    container_name: infisical-dev-redis
    env_file: .env
    restart: always
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    ports:
      - "6379:6379"
    networks:
      - ec_network
    volumes:
      - redis_data:/data

  infisical-db:
    container_name: infisical-db
    image: postgres:14-alpine
    restart: always
    env_file: .env
    ports:
      - "5432:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
    networks:
      - ec_network
    healthcheck:
      test: "pg_isready --username=${POSTGRES_USER} && psql --username=${POSTGRES_USER} --list"
      interval: 5s
      timeout: 10s
      retries: 10

networks:
  ec_network:
    driver: bridge

volumes:
  pg_data:
    driver: local
  redis_data:
    driver: local
